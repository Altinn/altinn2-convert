//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.5.2.0 (Newtonsoft.Json v12.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------

#nullable enable

namespace Altinn2Convert.Models.Altinn3.prefill
{
    #pragma warning disable // Disable all warnings

    /// <summary>Data from the Altinn user profile.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class UserProfile 
    {
        /// <summary>ID of the user.</summary>
        [Newtonsoft.Json.JsonProperty("UserId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? UserId { get; set; }= default!;
    
        /// <summary>The username.</summary>
        [Newtonsoft.Json.JsonProperty("UserName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? UserName { get; set; }= default!;
    
        /// <summary>The users phone number.</summary>
        [Newtonsoft.Json.JsonProperty("PhoneNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PhoneNumber { get; set; }= default!;
    
        /// <summary>The users email.</summary>
        [Newtonsoft.Json.JsonProperty("Email", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Email { get; set; }= default!;
    
        /// <summary>The users party id.</summary>
        [Newtonsoft.Json.JsonProperty("PartyId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyId { get; set; }= default!;
    
        /// <summary>The user type (default = 0, user = 1, org = 2).</summary>
        [Newtonsoft.Json.JsonProperty("UserType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? UserType { get; set; }= default!;
    
        /// <summary>The user's language preference in Altinn</summary>
        [Newtonsoft.Json.JsonProperty("ProfileSettingPreference.Language", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ProfileSettingPreferenceLanguage { get; set; }= default!;
    
        /// <summary>The user's preselected party.</summary>
        [Newtonsoft.Json.JsonProperty("ProfileSettingPreference.PreSelectedPartyId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ProfileSettingPreferencePreSelectedPartyId { get; set; }= default!;
    
        /// <summary>Boolean indicating whether the users want to be asked for the party on every form submission.</summary>
        [Newtonsoft.Json.JsonProperty("ProfileSettingsPreference.DoNotPromptForParty", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ProfileSettingsPreferenceDoNotPromptForParty { get; set; }= default!;
    
        /// <summary>The if of the users party.</summary>
        [Newtonsoft.Json.JsonProperty("Party.PartyId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPartyId { get; set; }= default!;
    
        /// <summary>The type of the users party. (Person = 1, Organization = 2, SelfIdentified = 3, SubUnit = 4, BankruptcyEstate = 5) </summary>
        [Newtonsoft.Json.JsonProperty("Party.PartyTypeName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPartyTypeName { get; set; }= default!;
    
        /// <summary>The party organization number.</summary>
        [Newtonsoft.Json.JsonProperty("Party.OrgNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyOrgNumber { get; set; }= default!;
    
        /// <summary>The party social security number.</summary>
        [Newtonsoft.Json.JsonProperty("Party.SSN", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartySSN { get; set; }= default!;
    
        /// <summary>The party unit type.</summary>
        [Newtonsoft.Json.JsonProperty("Party.UnitType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyUnitType { get; set; }= default!;
    
        /// <summary>The party name.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyName { get; set; }= default!;
    
        /// <summary>Boolean value indicating if the party is deleted.</summary>
        [Newtonsoft.Json.JsonProperty("Party.isDeleted", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyIsDeleted { get; set; }= default!;
    
        /// <summary>Boolean value indicating whether if the reportee in the list is only there for showing the hierarchy (a parent unit with no access).</summary>
        [Newtonsoft.Json.JsonProperty("Party.OnlyHierarchyElementWithNoAccess", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyOnlyHierarchyElementWithNoAccess { get; set; }= default!;
    
        /// <summary>The social security number.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Person.SSN", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPersonSSN { get; set; }= default!;
    
        /// <summary>The name persons full name.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Person.Name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPersonName { get; set; }= default!;
    
        /// <summary>The persons first name.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Person.FirstName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPersonFirstName { get; set; }= default!;
    
        /// <summary>The persons middle name.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Person.MiddleName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPersonMiddleName { get; set; }= default!;
    
        /// <summary>The persons last name.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Person.LastName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPersonLastName { get; set; }= default!;
    
        /// <summary>The telephone number.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Person.TelephoneNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPersonTelephoneNumber { get; set; }= default!;
    
        /// <summary>The mobile number.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Person.MobileNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPersonMobileNumber { get; set; }= default!;
    
        /// <summary>The mailing address.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Person.MailingAddress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPersonMailingAddress { get; set; }= default!;
    
        /// <summary>The mailing address postal code.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Person.MailingPostalCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPersonMailingPostalCode { get; set; }= default!;
    
        /// <summary>The mailing address postal city.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Person.MailingPostalCity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPersonMailingPostalCity { get; set; }= default!;
    
        /// <summary>The address municipal number.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Person.AddressMunicipalNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPersonAddressMunicipalNumber { get; set; }= default!;
    
        /// <summary>The address municipal name.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Person.AddressMunicipalName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPersonAddressMunicipalName { get; set; }= default!;
    
        /// <summary>The address street name.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Person.AddressStreetName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPersonAddressStreetName { get; set; }= default!;
    
        /// <summary>The address house number.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Person.AddressHouseNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPersonAddressHouseNumber { get; set; }= default!;
    
        /// <summary>The address house letter.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Person.AddressHouseLetter", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPersonAddressHouseLetter { get; set; }= default!;
    
        /// <summary>The address postal code.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Person.AddressPostalCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPersonAddressPostalCode { get; set; }= default!;
    
        /// <summary>The address city.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Person.AddressCity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyPersonAddressCity { get; set; }= default!;
    
        /// <summary>The organization number</summary>
        [Newtonsoft.Json.JsonProperty("Party.Organization.OrgNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyOrganizationOrgNumber { get; set; }= default!;
    
        /// <summary>The organization name.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Organization.Name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyOrganizationName { get; set; }= default!;
    
        /// <summary>The unit type.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Organization.UnitType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyOrganizationUnitType { get; set; }= default!;
    
        /// <summary>The phone number</summary>
        [Newtonsoft.Json.JsonProperty("Party.Organization.TelephoneNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyOrganizationTelephoneNumber { get; set; }= default!;
    
        /// <summary>The mobile number.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Organization.MobileNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyOrganizationMobileNumber { get; set; }= default!;
    
        /// <summary>The fax number.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Organization.FaxNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyOrganizationFaxNumber { get; set; }= default!;
    
        /// <summary>The email address.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Organization.EMailAddress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyOrganizationEMailAddress { get; set; }= default!;
    
        /// <summary>The internet address.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Organization.InternetAddress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyOrganizationInternetAddress { get; set; }= default!;
    
        /// <summary>The mailing address.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Organization.MailingAddress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyOrganizationMailingAddress { get; set; }= default!;
    
        /// <summary>The mailing address.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Organization.MailingPostalCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyOrganizationMailingPostalCode { get; set; }= default!;
    
        /// <summary>The mailing address postal city.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Organization.MailingPostalCity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyOrganizationMailingPostalCity { get; set; }= default!;
    
        /// <summary>The business address.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Organization.BusinessAddress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyOrganizationBusinessAddress { get; set; }= default!;
    
        /// <summary>The business postal code.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Organization.BusinessPostalCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyOrganizationBusinessPostalCode { get; set; }= default!;
    
        /// <summary>The business postal city.</summary>
        [Newtonsoft.Json.JsonProperty("Party.Organization.BusinessPostalCity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? PartyOrganizationBusinessPostalCity { get; set; }= default!;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    /// <summary>Data from ER (Enhetsregisteret).</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ER 
    {
        /// <summary>The organization number.</summary>
        [Newtonsoft.Json.JsonProperty("OrgNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? OrgNumber { get; set; }= default!;
    
        /// <summary>The organization name.</summary>
        [Newtonsoft.Json.JsonProperty("Name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Name { get; set; }= default!;
    
        /// <summary>The unit type.</summary>
        [Newtonsoft.Json.JsonProperty("UnitType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? UnitType { get; set; }= default!;
    
        /// <summary>The phone number.</summary>
        [Newtonsoft.Json.JsonProperty("TelephoneNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? TelephoneNumber { get; set; }= default!;
    
        /// <summary>The mobile number.</summary>
        [Newtonsoft.Json.JsonProperty("MobileNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? MobileNumber { get; set; }= default!;
    
        /// <summary>The fax number.</summary>
        [Newtonsoft.Json.JsonProperty("FaxNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? FaxNumber { get; set; }= default!;
    
        /// <summary>The email address.</summary>
        [Newtonsoft.Json.JsonProperty("EMailAddress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? EMailAddress { get; set; }= default!;
    
        /// <summary>The internet address.</summary>
        [Newtonsoft.Json.JsonProperty("InternetAddress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? InternetAddress { get; set; }= default!;
    
        /// <summary>The mailing address.</summary>
        [Newtonsoft.Json.JsonProperty("MailingAddress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? MailingAddress { get; set; }= default!;
    
        /// <summary>The mailing postal code.</summary>
        [Newtonsoft.Json.JsonProperty("MailingPostalCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? MailingPostalCode { get; set; }= default!;
    
        /// <summary>The mailing postal city.</summary>
        [Newtonsoft.Json.JsonProperty("MailingPostalCity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? MailingPostalCity { get; set; }= default!;
    
        /// <summary>The business address</summary>
        [Newtonsoft.Json.JsonProperty("BusinessAddress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? BusinessAddress { get; set; }= default!;
    
        /// <summary>The business postal code.</summary>
        [Newtonsoft.Json.JsonProperty("BusinessPostalCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? BusinessPostalCode { get; set; }= default!;
    
        /// <summary>The business postal city.</summary>
        [Newtonsoft.Json.JsonProperty("BusinessPostalCity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? BusinessPostalCity { get; set; }= default!;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    /// <summary>Data from DSF (Det Sentrale Folkeregisteret).</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class DSF 
    {
        /// <summary>The persons social security number.</summary>
        [Newtonsoft.Json.JsonProperty("SSN", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? SSN { get; set; }= default!;
    
        /// <summary>The persons full name.</summary>
        [Newtonsoft.Json.JsonProperty("Name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? Name { get; set; }= default!;
    
        /// <summary>The persons first name.</summary>
        [Newtonsoft.Json.JsonProperty("FirstName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? FirstName { get; set; }= default!;
    
        /// <summary>The persons middle name.</summary>
        [Newtonsoft.Json.JsonProperty("MiddleName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? MiddleName { get; set; }= default!;
    
        /// <summary>The persons last name.</summary>
        [Newtonsoft.Json.JsonProperty("LastName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? LastName { get; set; }= default!;
    
        /// <summary>The persons telephone number.</summary>
        [Newtonsoft.Json.JsonProperty("TelephoneNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? TelephoneNumber { get; set; }= default!;
    
        /// <summary>The persons mobile number.</summary>
        [Newtonsoft.Json.JsonProperty("MobileNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? MobileNumber { get; set; }= default!;
    
        /// <summary>The persons mailing address.</summary>
        [Newtonsoft.Json.JsonProperty("MailingAddress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? MailingAddress { get; set; }= default!;
    
        /// <summary>The persons mailing postal code.</summary>
        [Newtonsoft.Json.JsonProperty("MailingPostalCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? MailingPostalCode { get; set; }= default!;
    
        /// <summary>The persons full name.</summary>
        [Newtonsoft.Json.JsonProperty("MailingPostalCity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? MailingPostalCity { get; set; }= default!;
    
        /// <summary>The persons address municipal number.</summary>
        [Newtonsoft.Json.JsonProperty("AddressMunicipalNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? AddressMunicipalNumber { get; set; }= default!;
    
        /// <summary>The persons address municipal name.</summary>
        [Newtonsoft.Json.JsonProperty("AddressMunicipalName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? AddressMunicipalName { get; set; }= default!;
    
        /// <summary>The persons address street name.</summary>
        [Newtonsoft.Json.JsonProperty("AddressStreetName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? AddressStreetName { get; set; }= default!;
    
        /// <summary>The persons address house number.</summary>
        [Newtonsoft.Json.JsonProperty("AddressHouseNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? AddressHouseNumber { get; set; }= default!;
    
        /// <summary>The persons address house letter.</summary>
        [Newtonsoft.Json.JsonProperty("AddressHouseLetter", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? AddressHouseLetter { get; set; }= default!;
    
        /// <summary>The persons address postal code.</summary>
        [Newtonsoft.Json.JsonProperty("AddressPostalCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? AddressPostalCode { get; set; }= default!;
    
        /// <summary>The persons address city.</summary>
        [Newtonsoft.Json.JsonProperty("AddressCity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? AddressCity { get; set; }= default!;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    /// <summary>Schema that describes the prefill configuration for Altinn applications.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class Test 
    {
        /// <summary>Flag to determine if existing values in the app data model can be overwritten by prefill data.</summary>
        [Newtonsoft.Json.JsonProperty("allowOverwrite", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AllowOverwrite { get; set; }= default!;
    
        [Newtonsoft.Json.JsonProperty("UserProfile", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public UserProfile? UserProfile { get; set; }= default!;
    
        [Newtonsoft.Json.JsonProperty("ER", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ER? ER { get; set; }= default!;
    
        [Newtonsoft.Json.JsonProperty("DSF", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DSF? DSF { get; set; }= default!;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
}